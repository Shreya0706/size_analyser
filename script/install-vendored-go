#!/bin/sh

# The checksums below must correspond to the downloads for this version.
GO_VERSION=go1.16.3

case "$(uname -s):$(uname -m)" in
Linux:x86_64)
    GO_PKG=${GO_VERSION}.linux-amd64.tar.gz
    GO_PKG_SHA=951a3c7c6ce4e56ad883f97d9db74d3d6d80d5fec77455c6ada6c1f7ac4776d2
    ;;
Darwin:x86_64)
    GO_PKG=${GO_VERSION}.darwin-amd64.tar.gz
    GO_PKG_SHA=6bb1cf421f8abc2a9a4e39140b7397cdae6aca3e8d36dcff39a1a77f4f1170ac
    ;;
Darwin:arm64)
    GO_PKG=${GO_VERSION}.darwin-arm64.tar.gz
    GO_PKG_SHA=f4e96bbcd5d2d1942f5b55d9e4ab19564da4fad192012f6d7b0b9b055ba4208f
    ;;
*)
    echo 1>&2 "I don't know how to install Go on your platform."
    echo 1>&2 "Please install $GO_VERSION or later and add it to your PATH."
    exit 1
    ;;
esac

archivesum() {
    shasum -a256 "$ARCHIVE"
}

archiveok() {
    test -f "$ARCHIVE" && archivesum | grep -q $GO_PKG_SHA
}

if go version 2>/dev/null | grep -q $GO_VERSION; then
    go version
    exit 0
fi

ROOTDIR="$( cd "$( dirname "$0" )/.." && pwd )"
VENDORDIR="$ROOTDIR/vendor"
DOWNLOAD_URL=https://storage.googleapis.com/golang/$GO_PKG
ARCHIVE="$VENDORDIR/$GO_PKG"
INSTALLDIR="$VENDORDIR/$GO_VERSION"
export GOROOT="$INSTALLDIR/go"
INSTALLEDGO="$GOROOT/bin/go"

if [ -x $INSTALLEDGO ]; then
    "$INSTALLEDGO" version
    exit 0
fi

if ! archiveok; then
    echo "Downloading $DOWNLOAD_URL"
    mkdir -p "$VENDORDIR"
    if ! curl -L -o "$ARCHIVE" $DOWNLOAD_URL; then
        rm -f "$ARCHIVE"
        echo 1>&2 "download failed"
    fi
    if ! archiveok; then
        archivesum 1>&2
        echo 1>&2 "expected checksum $GO_PKG_SHA"
        exit 1
    fi
fi

rm -rf "$INSTALLDIR"
mkdir -p "$INSTALLDIR"
tar xf "$ARCHIVE" -C "$INSTALLDIR"
"$INSTALLEDGO" version
